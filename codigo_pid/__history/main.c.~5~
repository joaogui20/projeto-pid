#include <16F877A.h>
#device adc=10

#fuses NOWDT      // No Watch Dog Timer
#fuses NOBROWNOUT // No brownout reset
#fuses NOLVP      // No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O

#use delay(crystal=20000000)

#use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8,stream=Serial)

#include <mod_lcd.c>

#ifndef lcd_enable                                                             
   #define lcd_enable     PIN_E1      // pino enable do LCD
   #define lcd_rs         PIN_E2      // pino rs do LCD
   #define lcd_d4         PIN_D4      // pino de dados d4 do LCD
   #define lcd_d5         PIN_D5      // pino de dados d5 do LCD
   #define lcd_d6         PIN_D6      // pino de dados d6 do LCD
   #define lcd_d7         PIN_D7      // pino de dados d7 do LCD
#endif

long ADCread(int channel){
   set_adc_channel(channel);
   delay_us(10);
   return read_adc();
}

int cont = 0;

signed int16
   tempo_inicial = 0.0,
   tempRead = 0.0,
   tempUser = 0.0,
   tempLast = 0.0,
   PIDcontrol = 0.0,
   e = 0.0,
   p = 0.0,
   i = 0.0,
   d = 0.0,
   kp = 1,
   ki = 1,
   kd = 1;

void main()
{
   setup_adc_ports(AN0_AN1_AN2_AN3_AN4);
      set_adc_channel(0);
      delay_us(10);
      
      lcd_ini();
      delay_ms(10);
      
      setup_adc(ADC_CLOCK_DIV_16);
      setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1|RTCC_8_bit); // 51,2us overflow
      setup_timer_2(T2_DIV_BY_16,255,1); // 819us overflow, 819us interrupt
      
      setup_ccp1(CCP_PWM);
      set_pwm1_duty((int16)510);
      
      enable_interrupts(INT_RTCC);
      enable_interrupts(GLOBAL);
      
   while(TRUE)
   {
      
   }

}
